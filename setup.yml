---
- hosts: nodes
  gather_facts: false
  tags:
    - install_jdk
  tasks:
    - name: fetch oracle jdk
      local_action: 'command wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" "{{ jdk_download_location }}" --directory-prefix=/tmp/'
      run_once: true

    - name: transfer jdk from ansible host to raspberrypi
      copy: src=/tmp/{{ jdk_file }} dest=/tmp/{{ jdk_file }}

    - name: unarchive jdk download
      unarchive: copy=yes src=/tmp/{{ jdk_file }} dest=/opt
      become: yes
      become_method: sudo

    - name: rename jdk directory-prefix
      command: mv {{jdk_home}}{{ jdk_version }} {{jdk_home}}/
      become: yes
      become_method: sudo

    - name: add JAVA_HOME environment variable
      lineinfile: dest=/etc/profile line="export JAVA_HOME={{jdk_home}}" state=present
      become: yes
      become_method: sudo

    - name: update PATH
      lineinfile: dest=/etc/profile line="export PATH=$PATH:$JAVA_HOME/bin" state=present
      become: yes
      become_method: sudo

- hosts: nodes
  gather_facts: false
  tags:
    - remove_jdk
  tasks:
    - name: remove jdk
      file: dest={{jdk_home}} state=absent
      become: yes
      become_method: sudo

    - name: remove JAVA_HOME
      lineinfile: dest=/etc/profile line="export JAVA_HOME={{jdk_home}}" state=absent
      become: yes
      become_method: sudo

    - name: remove JAVA_HOME/bin path
      lineinfile: dest=/etc/profile line="export PATH=$PATH:$JAVA_HOME/bin" state=absent
      become: yes
      become_method: sudo

- hosts: nodes
  vars:
    cassandra: apache-cassandra-{{ cassandra_version }}
    seeds: "{%- for host in groups.seeds -%} {{ host }} {%if not loop.last %},{%- endif -%} {%- endfor -%}"
  tags:
    - install_cassandra
  tasks:

    - name: check if cassandra package exists
      local_action: stat path=/tmp/apache-cassandra-{{ cassandra_version }}-bin.tar.gz
      register: cassandra_file

    - name: fetch cassandra
      local_action: 'command wget "http://mirror.ox.ac.uk/sites/rsync.apache.org/cassandra/{{ cassandra_version }}/apache-cassandra-{{ cassandra_version }}-bin.tar.gz" --directory-prefix=/tmp/'
      run_once: true
      when: cassandra_file.stat.exists != true

    - name: transfer cassandra from ansible host to raspberrypi
      copy: src=/tmp/apache-cassandra-{{ cassandra_version }}-bin.tar.gz dest=/tmp/apache-cassandra-{{ cassandra_version }}-bin.tar.gz

    - name: unarchive cassandra download
      unarchive: copy=yes src=/tmp/{{ cassandra }}-bin.tar.gz dest=/opt
      become: yes
      become_method: sudo

    - name: rename apache-cassandra directory-prefix
      command: mv /opt/{{ cassandra }} {{ cassandra_home }}
      become: yes
      become_method: sudo

    - name: change configuration
      become: yes
      become_method: sudo
      lineinfile: dest={{ cassandra_home }}/conf/cassandra.yaml regexp="{{ item.old }}" line="{{ item.new }}" state="present" backrefs=yes
      with_items:
        - { old: "^cluster_name", new: "cluster_name: '{{cluster_name}}'" }
        - { old: '          - seeds:', new: '          - seeds:  "{{ seeds }}"' }
        - { old: "^listen_address: localhost", new: "listen_address: {{  ansible_eth0.ipv4.address }}" }
        - { old: "^rpc_address: localhost", new: "rpc_address: {{  ansible_eth0.ipv4.address }}" }
        - { old: "# data_file_directories", new : "data_file_directories:" }
        - { old: "#     - /var/lib/cassandra/data", new: "     - {{ cassandra_data_directory }}"}
        - { old: "# commitlog_directory", new: "commitlog_directory: {{ cassandra_log_directory }}"}

    - name: change directory permissions
      command: chown -Rf {{ cassandra_user }}:{{ cassandra_user }} {{ cassandra_home }}
      become: yes
      become_method: sudo

    # - name: install cassandra service
    #   template: src=config/apache-cassandra dest=/etc/init.d/{{ service_name }}
    #   become: yes
    #   become_method: sudo

    # - name: change permissions for cassandra service script
    #   command: chmod +x /etc/init.d/{{ service_name }}
    #   become: yes
    #   become_method: sudo

    # - name: set apache-cassandra service to autostart
    #   service: name={{ service_name }} enabled=yes state=stopped
    #   become: yes
    #   become_method: sudo

- hosts: nodes
  become: yes
  become_method: sudo
  vars:
    cassandra: apache-cassandra-{{ cassandra_version }}
    seeds: "{%- for host in groups.seeds -%} {{ host }} {%if not loop.last %},{%- endif -%} {%- endfor -%}"
  tags:
    - install_cassandra_service
  tasks:
    - name: install {{ service_name }} service
      template: src=config/apache-cassandra dest=/etc/systemd/system/multi-user.target.wants/{{ service_name }}.service

    - name: change permissions for cassandra service script
      command: chmod +x /etc/systemd/system/multi-user.target.wants/{{ service_name }}.service

    - file: path=/var/run/cassandra state=directory mode=0755 owner={{ cassandra_user }} group={{ cassandra_user }}
    - file: path=/var/log/cassandra state=directory mode=0755 owner={{ cassandra_user }} group={{ cassandra_user }}
    - file: path=/var/lib/cassandra state=directory mode=0755 owner={{ cassandra_user }} group={{ cassandra_user }}

    - name: reload systemd daemon
      command: systemctl daemon-reload
      notify:
      - enable {{ service_name }} service

  handlers:
    - name: enable {{ service_name }} service
      service: name=cassandra enabled=yes state=stopped

- hosts: nodes
  gather_facts: false
  tags:
    - remove_cassandra
  tasks:
    - name: stop apache-cassandra service
      service: name={{ service_name }} state=stopped enabled=no
      ignore_errors: yes

    - name: delete apache-cassandra service file
      file: dest=/etc/init.d/{{ service_name }} state=absent
      become: yes
      become_method: sudo
      ignore_errors: yes

    - name: delete apache-cassandra directory
      file: dest={{ cassandra_home }} state=absent
      become: yes
      become_method: sudo
      ignore_errors: yes

- hosts: nodes
  become: yes
  become_method: sudo
  tags:
    - update_fstab
  tasks:
    - name: create external mount point for log and data directories
      mount:
        path: {{ cassandra_mount_point }}
        src: {{ external_disk }}
        fstype: {{ file_system }}
        opts: default
        state: present
